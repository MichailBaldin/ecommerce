name: Feature Branch CI

on:
  push:
    branches: ["feature/*"]

env:
  GO_VERSION: "1.24.5"

jobs:
  quick-check:
    name: Quick Check
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v4
        with:
          go-version: ${{ env.GO_VERSION }}
          cache: true

      - name: Go workspace sync
        run: go work sync

      - name: Determine changed services
        id: changes
        run: |
          CHANGED_FILES=$(git diff --name-only HEAD~1 HEAD || echo "")
          echo "changed_files=$CHANGED_FILES" >> $GITHUB_OUTPUT

          # Проверяем какие сервисы изменились
          if echo "$CHANGED_FILES" | grep -q "services/gateway"; then
            echo "gateway_changed=true" >> $GITHUB_OUTPUT
          fi
          if echo "$CHANGED_FILES" | grep -q "services/users"; then
            echo "users_changed=true" >> $GITHUB_OUTPUT
          fi
          if echo "$CHANGED_FILES" | grep -q "services/products"; then
            echo "products_changed=true" >> $GITHUB_OUTPUT
          fi

      - name: Build Gateway
        if: steps.changes.outputs.gateway_changed == 'true'
        run: |
          echo "Building gateway service..."
          cd services/gateway
          go mod tidy
          go vet ./...
          go build .

      - name: Build Users Service
        if: steps.changes.outputs.users_changed == 'true'
        run: |
          echo "Building users service..."
          cd services/users
          go mod tidy
          go vet ./...
          go build .

      - name: Build Products Service
        if: steps.changes.outputs.products_changed == 'true'
        run: |
          echo "Building products service..."
          cd services/products
          go mod tidy
          go vet ./...
          go build .

      - name: Notify Telegram
        if: always()
        run: |
          STATUS="${{ job.status == 'success' && 'SUCCESS' || 'FAILED' }}"
          curl -s -X POST "https://api.telegram.org/bot${{ secrets.TELEGRAM_BOT_TOKEN }}/sendMessage" \
            -d chat_id="${{ secrets.TELEGRAM_CHAT_ID }}" \
            -d parse_mode="HTML" \
            -d text="$STATUS <b>Feature CI</b>%0A<b>Branch:</b> ${{ github.ref_name }}%0A<b>Author:</b> ${{ github.actor }}"
